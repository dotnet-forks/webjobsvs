<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsAzure.Jobs.Host</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsAzure.Jobs.HeartbeatTimer">
            <summary>Represents a timer that keeps a heartbeat running at a specified interval using a separate thread.</summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Jobs.JobHost">
            <summary>
            Defines properties and methods to locate Job methods and listen to trigger events in order
            to execute Job methods.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.#ctor">
            <summary>
            Initializes a new instance of the JobHost class, using a Windows Azure Storage connection string located
            in the connectionStrings section of the configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JobHost class, using a single Windows Azure Storage connection string for
            both reading and writing data as well as logging.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the JobHost class, using one Windows Azure Storage connection string for
            reading and writing data and another connection string for logging.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.RunOnBackgroundThread">
            <summary>
            Runs the jobs on a background thread and return immediately.
            The trigger listeners and jobs will execute on the background thread.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.RunOnBackgroundThread(System.Threading.CancellationToken)">
            <summary>
            Runs the jobs on a background thread and return immediately.
            The trigger listeners and jobs will execute on the background thread.
            The thread exits when the cancellation token is signalled.
            </summary>
            <param name="token">The token to monitor for cancellation requests.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.RunAndBlock">
            <summary>
            Runs the jobs on the current thread.
            The trigger listeners and jobs will execute on the current thread.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.RunAndBlock(System.Threading.CancellationToken)">
            <summary>
            Runs the jobs on the current thread.
            The trigger listeners and jobs will execute on the current thread.
            The thread will be blocked until the cancellation token is signalled.
            </summary>
            <param name="token">The token to monitor for cancellation requests.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.Call(System.Reflection.MethodInfo)">
            <summary>
            Invoke a specific function specified by the method parameter.
            </summary>
            <param name="method">A MethodInfo representing the job method to execute.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.Call(System.Reflection.MethodInfo,System.Object)">
            <summary>
            Invoke a specific function specified by the method parameter.
            </summary>
            <param name="method">A MethodInfo representing the job method to execute.</param>
            <param name="arguments">An object with public properties representing argument names and values to bind to the parameter tokens in the job method's arguments.</param>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.JobHost.ReadConnectionStringWithEnvironmentFallback(System.String)">
            <summary>
            Reads connection string from the connectionstrings section, or from ENV if it is missing from the config, or is an empty string or a whitespace.
            </summary>
            <param name="connectionStringName">The name of the connection string to look up.</param>
            <returns>The connection string.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.JobHost.UserAccountName">
            <summary>
            Gets the storage account name from the connection string.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.QueueClient.ValidateQueueName(System.String)">
            <summary>
            Ensures that the passed name is a valid queue name.
            If not, an ArgumentException is thrown
            </summary>
            <exception cref="T:System.ArgumentException">If the name is invalid</exception>
            <param name="name">The name to be tested</param>
        </member>
        <member name="T:Microsoft.WindowsAzure.Jobs.AddTriggerPayload">
            <summary>
            Client returns this to register new triggers.  
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.AddTriggerPayload.Validate">
            <summary>
            Helper to validate the structure is proper before intializing. Will throw on errors.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.AddTriggerPayload.ValidateQueueName(System.String)">
            <summary>
            Ensures that the passed name is a valid queue name.
            If not, an ArgumentException is thrown
            </summary>
            <exception cref="T:System.ArgumentException">If the name is invalid</exception>
            <param name="name">The name to be tested</param>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.AddTriggerPayload.Credentials">
            <summary>
            Provide credential information for the azure storage that the triggers bind against.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.AddTriggerPayload.Triggers">
            <summary>
            Collection of new triggers to register. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Jobs.Credentials">
            <summary>
            Store all sensitive information in one spot.  
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.Credentials.AccountConnectionString">
            <summary>
            The azure storage account connection string that blob and queue triggers bind against. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Jobs.TriggerType">
            <summary>
            Define the kind of trigger
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Jobs.TriggerType.Blob">
            <summary>
            Blob trigger, invoked when an input blob is detected. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Jobs.TriggerType.Queue">
            <summary>
            Queue Trigger, invoked when a new queue mesasge is detected
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.Jobs.TriggerType.Timer">
            <summary>
            Timer trigger, invoked when a timer is fired. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsAzure.Jobs.TriggerRaw">
            <summary>
            Wire protocol for an serializing triggers.
            Irrelevant fields should reamin null.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.TriggerRaw.NewBlob(System.String,System.String,System.String)">
            <summary>
            Create a new trigger on blobs. This fires the callback if a new input blob is detected. The http content is the string name of the blob path that was detected. 
            For example, if input is 'container/{name}.txt', and output is 'container/outputs/{nane}.txt;
            </summary>
            <param name="callbackPath">The uri to get invoked when this trigger fires.</param>
            <param name="blobInput">An input path to search for. The blob name can include 'route parameters' for pattern matching, is and of the form 'container/blob'. </param>
            <param name="blobOutput">A semicolon delimited list of output paths. The trigger is not fired if all outputs are newer than the input. 
            This can have route parameters which are populated from the capture at the input values.</param>
            <returns>A trigger object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.TriggerRaw.NewQueue(System.String,System.String)">
            <summary>
            Create a new trigger on queue message. This fires the callback when a new queue message is detected, where the http request contents are the azure queue message contents. 
            The azure message is deleted if the callback is invoked. 
            </summary>
            <param name="callbackPath">The uri to get invoked when this trigger fires.</param>
            <param name="queueName">The azure queue to listen on. Be sure to adhere to azure queue naming rules, including being all lowercase.</param>
            <returns>A trigger object.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.Jobs.TriggerRaw.NewTimer(System.String,System.TimeSpan)">
            <summary>
            Create a trigger that fires on a timer interval. 
            </summary>
            <param name="callbackPath">The uri to get invoked when this trigger fires.</param>
            <param name="interval">The frequency at which to invoke the timer</param>
            <returns>A trigger object.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.Type">
            <summary>
            Define what type of trigger. 
            Serializing can emit as either the raw number or the name.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.CallbackPath">
            <summary>
            Invoke this path when the trigger fires 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.BlobInput">
            <summary>
            For Blobs, blob path for the input. This is of the form "container/blob"
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.BlobOutput">
            <summary>
            For Blobs, optional. semicolon delimited list of blob paths for the output. This is of the form 
            "container1/blob1;container2/blob2"
            The trigger is not fired if all outputs have a more recent modified timestamp than the input. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.QueueName">
            <summary>
            For Queues. The name of the azure queue. Be sure to follow azure queue naming rules, including all lowercase.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.Jobs.TriggerRaw.Interval">
            <summary>
            For timers, the interval between when the time is fired. 
            </summary>
        </member>
    </members>
</doc>
